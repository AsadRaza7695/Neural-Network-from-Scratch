name: Build and Release Binary

on:
  push:
    tags:
      - 'v*' # Trigger the workflow only on version tags
  workflow_dispatch: # Allow manual triggers

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      # Step 4: Build the binary
      - name: Build binary
        run: |
          pyinstaller --onefile StochasticGradientDescent.py
          mkdir -p dist/bin
          mv dist/StochasticGradientDescent dist/bin/

      # Step 5: Upload binary as artifact
      - name: Upload binary artifact
        uses: actions/upload-artifact@v3
        with:
          name: StochasticGradientDescent
          path: dist/bin/StochasticGradientDescent

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') # Only run for tag-triggered events

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Download artifact from the build step
      - name: Download binary artifact
        uses: actions/download-artifact@v3
        with:
          name: StochasticGradientDescent

      # Step 3: Create GitHub release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }}"
          body: "Automated release with binary attached."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: Upload binary to the release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: dist/bin/StochasticGradientDescent
          asset_name: StochasticGradientDescent
          asset_content_type: application/octet-stream
